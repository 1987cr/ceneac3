<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "user".
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $auth_key
 * @property string $access_token
 * @property string $name
 * @property string $lastname
 * @property string $email
 * @property integer $ci
 * @property string $phone_mobile
 * @property string $phone_home
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \app\models\Instructors[] $instructors
 * @property \app\models\InterestLists[] $interestLists
 * @property \app\models\PermissionUsers[] $permissionUsers
 * @property \app\models\Permissions[] $permissions
 * @property \app\models\Postulates[] $postulates
 * @property \app\models\Preregisters[] $preregisters
 * @property \app\models\Registers[] $registers
 * @property \app\models\RoleUsers[] $roleUsers
 * @property \app\models\Roles[] $roles
 * @property string $aliasModel
 */
abstract class User extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user';
    }


    /**
     * @inheritdoc
     */
    // public function behaviors()
    // {
    //     return [
    //         [
    //             'class' => TimestampBehavior::className(),
    //         ],
    //     ];
    // }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['username', 'password', 'name', 'lastname', 'email'], 'required'],
            [['ci'], 'integer'],
            [['username', 'auth_key', 'access_token', 'name', 'email', 'phone_mobile', 'phone_home'], 'string', 'max' => 255],
            [['password'], 'string', 'max' => 300],
            [['lastname'], 'string', 'max' => 45],
            [['email'], 'unique']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'username' => 'Username',
            'password' => 'Password',
            'auth_key' => 'Auth Key',
            'access_token' => 'Access Token',
            'name' => 'Name',
            'lastname' => 'Lastname',
            'email' => 'Email',
            'ci' => 'Ci',
            'phone_mobile' => 'Phone Mobile',
            'phone_home' => 'Phone Home',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInstructors()
    {
        return $this->hasMany(\app\models\Instructor::className(), ['user_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInterestLists()
    {
        return $this->hasMany(\app\models\InterestList::className(), ['user_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPermissionUsers()
    {
        return $this->hasMany(\app\models\PermissionUser::className(), ['user_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPermissions()
    {
        return $this->hasMany(\app\models\Permission::className(), ['id' => 'permission_id'])->viaTable('permission_users', ['user_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPostulates()
    {
        return $this->hasMany(\app\models\Postulate::className(), ['user_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPreregisters()
    {
        return $this->hasMany(\app\models\Preregistered::className(), ['user_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRegisters()
    {
        return $this->hasMany(\app\models\Registered::className(), ['user_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRoleUsers()
    {
        return $this->hasMany(\app\models\RoleUser::className(), ['user_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRoles()
    {
        return $this->hasMany(\app\models\Role::className(), ['id' => 'role_id'])->viaTable('role_users', ['user_id' => 'id']);
    }




}
