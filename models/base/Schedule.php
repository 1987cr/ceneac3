<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "schedules".
 *
 * @property integer $id
 * @property integer $course_id
 * @property string $start_date
 * @property string $end_date
 * @property integer $duration
 * @property string $start_hour
 * @property string $end_hour
 * @property string $classroom
 * @property integer $monday
 * @property integer $tuesday
 * @property integer $wednesday
 * @property integer $thursday
 * @property integer $friday
 * @property integer $saturday
 * @property string $comments
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \app\models\Instructors[] $instructors
 * @property \app\models\Postulates[] $postulates
 * @property \app\models\Preregisters[] $preregisters
 * @property \app\models\Registers[] $registers
 * @property \app\models\Courses $course
 * @property string $aliasModel
 */
abstract class Schedule extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'schedules';
    }


    /**
     * @inheritdoc
     */
    // public function behaviors()
    // {
    //     return [
    //         [
    //             'class' => TimestampBehavior::className(),
    //         ],
    //     ];
    // }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['course_id', 'start_date', 'end_date', 'duration', 'start_hour', 'end_hour', 'classroom', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'comments'], 'required'],
            [['course_id', 'duration', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'], 'integer'],
            [['start_date', 'end_date'], 'safe'],
            [['comments'], 'string'],
            [['start_hour', 'end_hour', 'classroom'], 'string', 'max' => 255],
            [['course_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Course::className(), 'targetAttribute' => ['course_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'course_id' => 'Name',
            'start_date' => 'Start Date',
            'end_date' => 'End Date',
            'duration' => 'Duration',
            'start_hour' => 'Start Hour',
            'end_hour' => 'End Hour',
            'classroom' => 'Classroom',
            'monday' => 'Monday',
            'tuesday' => 'Tuesday',
            'wednesday' => 'Wednesday',
            'thursday' => 'Thursday',
            'friday' => 'Friday',
            'saturday' => 'Saturday',
            'comments' => 'Comments',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At'
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInstructors()
    {
        return $this->hasMany(\app\models\Instructor::className(), ['schedule_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPostulates()
    {
        return $this->hasMany(\app\models\Postulate::className(), ['schedule_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPreregisters()
    {
        return $this->hasMany(\app\models\Preregistered::className(), ['schedule_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRegisters()
    {
        return $this->hasMany(\app\models\Registered::className(), ['schedule_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCourse()
    {
        return $this->hasOne(\app\models\Course::className(), ['id' => 'course_id']);
    }




}
